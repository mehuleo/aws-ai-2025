# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: condor
# "service" is the name of this project. This will also be added to your AWS resource names.
service: email-agent-services

provider:
  name: aws
  runtime: python3.12
  deploymentBucket: serverless-email-agent
  stage: prod
  memorySize: 256
  environment:
    S3_BUCKET_NAME: ${file(./serverless-config.yml):S3_BUCKET_NAME}
    EMAILS_TABLE_NAME: ${file(./serverless-config.yml):EMAILS_TABLE_NAME}
    SUBSCRIBERS_TABLE_NAME: ${file(./serverless-config.yml):SUBSCRIBERS_TABLE_NAME}
    GOOGLE_CLIENT_ID: ${file(./serverless-config.yml):GOOGLE_CLIENT_ID}
    GOOGLE_CLIENT_SECRET: ${file(./serverless-config.yml):GOOGLE_CLIENT_SECRET}
    GOOGLE_AUTH_REDIRECT_URI: ${file(./serverless-config.yml):GOOGLE_AUTH_REDIRECT_URI}
    AGENT_RUNTIME_ARN: ${file(./serverless-config.yml):AGENT_RUNTIME_ARN}

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
    layer:
      enable: true

package:
  individually: true

layers:
  googleDeps:
    path: layers/google_deps
    name: google-deps-layer
    description: "Google CalendarAPI client dependencies"
    compatibleRuntimes:
      - python3.12

functions:
  ping:
    handler: functions/health/health.ping
    events:
      - http:
          path: v1/health
          method: get
          cors: true
    package:
      include:
        - functions/health/**
  parseEmail:
    handler: functions/utils/email_utils.parseEmail
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:GetObject
          - s3:ListBucket
        Resource: "*"
      - Effect: Allow
        Action:
          - ses:*
        Resource: "*"
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
          - dynamodb:UpdateItem
          - dynamodb:Query
          - dynamodb:Scan
        Resource: 
          - "arn:aws:dynamodb:*:*:table/${file(./serverless-config.yml):EMAILS_TABLE_NAME}"
          - "arn:aws:dynamodb:*:*:table/${file(./serverless-config.yml):SUBSCRIBERS_TABLE_NAME}"
    package:
      include:
        - functions/utils/**
  validateGoogleAuth:
    handler: functions/auth/google_auth.validateGoogleAuth
    events:
      - http:
          path: v1/validateGoogleAuth
          method: post
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
          - dynamodb:UpdateItem
          - dynamodb:Query
          - dynamodb:Scan
        Resource: 
          - "arn:aws:dynamodb:*:*:table/${file(./serverless-config.yml):SUBSCRIBERS_TABLE_NAME}"
    package:
      include:
        - functions/auth/**
  testInvoke:
    handler: functions/intelligence/agent_test.test_invoke
    events:
      - http:
          path: v1/test-invoke
          method: post
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - bedrock-agentcore:InvokeAgentRuntime
        Resource: "*"
    package:
      include:
        - functions/intelligence/**
  
  # Google Calendar Functions (Internal - No API Gateway)
  getAllEvents:
    handler: functions/google_calendar/events.get_all_events
    layers:
      - {Ref: GoogleDepsLambdaLayer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource: 
          - "arn:aws:dynamodb:*:*:table/${file(./serverless-config.yml):SUBSCRIBERS_TABLE_NAME}"
    package:
      include:
        - functions/google_calendar/**
  
  getEventInstances:
    handler: functions/google_calendar/events.get_event_instances
    layers:
      - {Ref: GoogleDepsLambdaLayer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource: 
          - "arn:aws:dynamodb:*:*:table/${file(./serverless-config.yml):SUBSCRIBERS_TABLE_NAME}"
    package:
      include:
        - functions/google_calendar/**
  
  createEvent:
    handler: functions/google_calendar/events.create_event
    layers:
      - {Ref: GoogleDepsLambdaLayer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource: 
          - "arn:aws:dynamodb:*:*:table/${file(./serverless-config.yml):SUBSCRIBERS_TABLE_NAME}"
    package:
      include:
        - functions/google_calendar/**
  
  updateEvent:
    handler: functions/google_calendar/events.update_event
    layers:
      - {Ref: GoogleDepsLambdaLayer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource: 
          - "arn:aws:dynamodb:*:*:table/${file(./serverless-config.yml):SUBSCRIBERS_TABLE_NAME}"
    package:
      include:
        - functions/google_calendar/**
  
  deleteEvent:
    handler: functions/google_calendar/events.delete_event
    layers:
      - {Ref: GoogleDepsLambdaLayer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource: 
          - "arn:aws:dynamodb:*:*:table/${file(./serverless-config.yml):SUBSCRIBERS_TABLE_NAME}"
    package:
      include:
        - functions/google_calendar/**
  
  rsvpEvent:
    handler: functions/google_calendar/events.rsvp_event
    layers:
      - {Ref: GoogleDepsLambdaLayer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource: 
          - "arn:aws:dynamodb:*:*:table/${file(./serverless-config.yml):SUBSCRIBERS_TABLE_NAME}"
    package:
      include:
        - functions/google_calendar/**
  
  getAvailability:
    handler: functions/google_calendar/events.get_availability
    layers:
      - {Ref: GoogleDepsLambdaLayer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource: 
          - "arn:aws:dynamodb:*:*:table/${file(./serverless-config.yml):SUBSCRIBERS_TABLE_NAME}"
    package:
      include:
        - functions/google_calendar/**
  
  getTimezone:
    handler: functions/google_calendar/events.get_timezone
    layers:
      - {Ref: GoogleDepsLambdaLayer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:GetItem
          - dynamodb:UpdateItem
        Resource: 
          - "arn:aws:dynamodb:*:*:table/${file(./serverless-config.yml):SUBSCRIBERS_TABLE_NAME}"
    package:
      include:
        - functions/google_calendar/**

resources:
  Resources:
    ParseEmailLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName:
          Ref: ParseEmailLambdaFunction
        Action: lambda:InvokeFunction
        Principal: ses.amazonaws.com
